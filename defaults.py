defaults = [
    ("--out_dir", str, '/work/awilf/emtvqa/results/hash1'),
    ("--debug", int, 0),
    ("--results_dir_base", str, "results/results"),
    ("--log_freq", int, 50),
    ("--lr", float, 3e-4 ),
    ("--graph_lr", float, 1e-06 ),
    ("--num_batches", int, 100 ), # used for testing: only do this many batches per epoch
    ("--name", str, '' ), # used for testing: only do this many batches per epoch
    ("--wd", float, 1e-5 ),
    ("--n_epoch", int, 15 ),
    ("--sweep", int, 0),
    ("--max_es_cnt", int, 3 ),
    ("--bs", int, 10 ),
    ("--test_bs", int, 100 ),
    ("--clip", float, 1.0 ),
    ("--device", int, 0, ),
    ("--no_core_driver", int, 0),
    ("--word_count_threshold", int, 2),
    ("--no_glove", int, 0),
    ("--no_ts", int, 0),
    ("--input_streams", str, "sub vcpt"),
    ("--n_layers_cls", int, 1),
    ("--hsz1", int, 150),
    ("--hsz2", int, 64),
    ("--embedding_size", int, 300),
    ("--max_sub_l", int, 300),
    ("--max_vcpt_l", int, 300),
    ("--max_vid_l", int, 480),
    ("--max_q_l", int, 50),
    ("--vocab_size", int, 0),
    ("--no_normalize_v", int, 0),
    ("--num_workers", int, 1),
    ("--pad", int, 1),
    ("--hidden_dim", int, 64),
    ("--num_heads", int, 4),
    ("--batch_norm", int, 0),
    ("--num_convs", int, 2),
    ("--drop_het", float, 0),
    ("--train_path", str, "/work/awilf/emtvqa/data/tvqa_train_processed.json"),
    ("--valid_path", str, "/work/awilf/emtvqa/data/tvqa_val_processed.json"),
    ("--test_path", str, "/work/awilf/emtvqa/data/tvqa_test_public_processed.json"),
    ("--glove_path", str, "/work/awilf/emtvqa/data/glove.6B.300d.txt"),
    ("--vcpt_path", str, "/work/awilf/tvqa/data/det_visual_concepts_hq.pickle"),
    ("--vid_feat_path", str, "/work/awilf/tvqa/data/tvqa_imagenet_pool5_hq.h5"),
    ("--vid_feat_size", int, 2048),
    ("--word2idx_path", str, "/work/awilf/emtvqa/cache/word2idx.pickle"),
    ("--idx2word_path", str, "/work/awilf/emtvqa/cache/idx2word.pickle"),
    ("--vocab_embedding_path", str, "/work/awilf/emtvqa/cache/vocab_embedding.pickle")
]
